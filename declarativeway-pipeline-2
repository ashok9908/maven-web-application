

pipeline{

agent any

parameters {
  choice choices: ['development', 'master', 'qa'], description: 'Building Branch', name: 'BranchName'
}


tools{
maven "maven3.8.7"
}

triggers {
  pollSCM ('* * * * *')
     cron ('* * * * *')
}

options {
  timestamps()
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}


stages{

 //getting code from github
 stage('checkoutcode'){
 steps{
     slacknotifications("STARTED")
 git branch: "${params.BranchName}", credentialsId: 'b15aaeac-ec99-496d-be5f-2ccf3eac7ea5', url: 'https://github.com/ashok9908/maven-web-application.git'
 }
 }

 //BuildCode
 stage('buildcode'){
 steps{
 sh "mvn clean package"
 }
 }
 
 //SonarQubeScanner Report
 stage('Sonarqube Report'){
 steps{
 sh "mvn clean sonar:sonar"
 }
 }
 
 //Artifactdeployment into Nexus
 stage('ArtifactDeployintonexus'){
 steps{
 sh "mvn clean deploy"
 }
 }
 
 //Application deploy into Tomcat
 stage('AppdeployintoTomcat'){
 steps{
 sshagent(['94542fee-d7ba-44b4-8e5e-38e1580dd84a']) {
 sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.127.164.98:/opt/apache-tomcat-9.0.71/webapps"
 }
 }
 }


}//stagesclosing

post {
  success {
  slacknotifications('currentBuild.result') 
  }
  failure {
  slacknotifications('currentBuild.result') 
  }
}

}//pipelineclosing

def slacknotifications(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
